INIT
    EXTERN CHARACTERTEMPLATE:%charSpawn=eddf2b83-21d3-4d6f-b958-c30f00dbbb92
    CHARACTER:%char
    CHARACTER:%owner
    FLOAT:%WardingBondHP = 1.0
    FLOAT:%LifeTransferenceHP = 1.0
    FLOAT:%VampiricTouchHP = 1.0

EVENTS

EVENT RitualCasting_Classes
VARS
	CHARACTER:_Character
ON
	OnTurn(_Character)
	OnCharacterVitalityChanged(_Character, _)
	OnSight(_Character)
	OnItemEquipped(_Character,_)
	OnItemUnequipped(_Character,_)
ACTIONS
IF	"(c1|c2|c3|c4)&!c5"
	IsTagged(_Character,"BARD")
	IsTagged(_Character,"CLERIC")
	IsTagged(_Character,"DRUID")
	IsTagged(_Character,"WIZARD")
	CharacterHasStatus(_Character,RITUAL_CASTER)
THEN
	CharacterApplyStatus(_Character,RITUAL_CASTER,-1)
ENDIF

EVENT MageHandItemGive
VARS
	CHARACTER:_Character
	CHARACTER:_MageHand
	ITEM:_Item
ON
	OnCharacterStatusApplied(_Character,RETRIEVE)
ACTIONS
IF	"c1&c2&c3"
	CharacterGetStatusSourceCharacter(_Character,RETRIEVE,_MageHand)
	CharacterHasStatus(_MageHand,MAGE_HAND_RETRIEVE)
	CharacterGetStatusSourceItem(_MageHand, MAGE_HAND_RETRIEVE, _Item)
THEN
	ItemToInventory(_Item,_Character)
	ItemRemoveStatus(_Item,ITEM_INVISIBILITY_AURA)
ENDIF

EVENT VampiricTouchSetHP
VARS
	CHARACTER:_Character
	FLOAT:_HP
	STRING: _Text
	FIXEDSTRING: _Disp
ON
	OnCharacterStatusAttempt(_Character, "VAMPIRIC_TOUCH_HEAL")
ACTIONS
	IF	"c1"
		CharacterGetStat(_HP, _Character, VitalityPoints)
	THEN
		Set(%VampiricTouchHP, _HP)
	ENDIF

EVENT VampiricTouchSetSource
VARS
	CHARACTER:_Character
	CHARACTER:_Source
	FLOAT:_HP
	STRING: _Text
	FIXEDSTRING: _Disp
ON
	OnCharacterStatusApplied(_Character, "VAMPIRIC_TOUCH_HEAL")
ACTIONS
	IF	"c1"
		CharacterGetStatusSourceCharacter(_Character,"VAMPIRIC_TOUCH_HEAL",_Source)
	THEN
		SetVar(_Character,"Source",_Source)
	ENDIF

EVENT VampiricTouchHeal
VARS
	CHARACTER:_Character
	CHARACTER:_Source
	FLOAT:_HP
	FLOAT:_MaxHP
	FLOAT:_CalculatedHP
	INT:_IntofCalculatedHP
	FLOAT:_SourceHP
	FLOAT:_SourceMaxHP
	FLOAT:_CalculatedSourceHP
	STRING: _Text
	FIXEDSTRING: _Disp
ON
	OnCharacterStatusRemoved(_Character, "VAMPIRIC_TOUCH_HEAL")
ACTIONS
	IF "c1&c2&c3&c4"
		CharacterGetStat(_HP, _Character, VitalityPoints)
		GetVar(_Source,_Character,"Source")
		CharacterGetStat(_SourceHP, _Source, VitalityPoints)
		CharacterGetStat(_SourceMaxHP, _Source, VitalityMax)
	THEN
		Set(_CalculatedHP, %VampiricTouchHP)
		Subtract(_CalculatedHP, _HP)
		//Cast(_Text, _CalculatedHP)
		//Cast(_Disp, _Text)
		//StatusText(_Character, _Disp)
		Divide(_CalculatedHP, 2)
		Add(_CalculatedHP, _SourceHP)
		Divide(_CalculatedHP, _SourceMaxHP)
		SetHealth(_Source, _CalculatedHP)
	ENDIF

EVENT LifeTransferenceSetHP
VARS
	CHARACTER:_Character
	FLOAT:_HP
	STRING: _Text
	FIXEDSTRING: _Disp
ON
	OnCharacterStatusAttempt(_Character, "LIFE_TRANSFERENCE_TECHNICAL")
	OnCharacterStatusAttempt(_Character, "LIFE_TRANSFERENCE_TECHNICAL_4")
	OnCharacterStatusAttempt(_Character, "LIFE_TRANSFERENCE_TECHNICAL_5")
	OnCharacterStatusAttempt(_Character, "LIFE_TRANSFERENCE_TECHNICAL_6")
	OnCharacterStatusAttempt(_Character, "LIFE_TRANSFERENCE_TECHNICAL_7")
	OnCharacterStatusAttempt(_Character, "LIFE_TRANSFERENCE_TECHNICAL_8")
	OnCharacterStatusAttempt(_Character, "LIFE_TRANSFERENCE_TECHNICAL_9")
ACTIONS
	IF	"c1"
		CharacterGetStat(_HP, _Character, VitalityPoints)
	THEN
		Set(%LifeTransferenceHP, _HP)
	ENDIF

EVENT LifeTransferenceChangeinHP
VARS
	CHARACTER:_Character
	FLOAT:_HP
	FLOAT:_MaxHP
	FLOAT:_CalculatedHP
	INT:_IntofCalculatedHP
	FLOAT:_SourceHP
	FLOAT:_SourceMaxHP
	FLOAT:_CalculatedSourceHP
	STRING: _Text
	FIXEDSTRING: _Disp
ON
	OnCharacterStatusRemoved(_Character, "LIFE_TRANSFERENCE_TECHNICAL")
	OnCharacterStatusRemoved(_Character, "LIFE_TRANSFERENCE_TECHNICAL_4")
	OnCharacterStatusRemoved(_Character, "LIFE_TRANSFERENCE_TECHNICAL_5")
	OnCharacterStatusRemoved(_Character, "LIFE_TRANSFERENCE_TECHNICAL_6")
	OnCharacterStatusRemoved(_Character, "LIFE_TRANSFERENCE_TECHNICAL_7")
	OnCharacterStatusRemoved(_Character, "LIFE_TRANSFERENCE_TECHNICAL_8")
	OnCharacterStatusRemoved(_Character, "LIFE_TRANSFERENCE_TECHNICAL_9")
ACTIONS
	IF "c1"
		CharacterGetStat(_HP, _Character, VitalityPoints)
	THEN
		Set(_CalculatedHP, %LifeTransferenceHP)
		Subtract(_CalculatedHP, _HP)
		Set(%LifeTransferenceHP, _CalculatedHP)
	ENDIF

EVENT LifeTransferenceTarget
VARS
	CHARACTER:_Character
	FLOAT:_HP
	FLOAT:_MaxHP
	FLOAT:_CalculatedHP
	FLOAT:_SourceHP
	FLOAT:_SourceMaxHP
	FLOAT:_CalculatedSourceHP
	STRING: _Text
	FIXEDSTRING: _Disp
ON
	OnCharacterStatusRemoved(_Character, "LIFE_TRANSFERENCE")
ACTIONS
	IF "c1&c2"
		CharacterGetStat(_SourceHP, _Character, VitalityPoints)
		CharacterGetStat(_SourceMaxHP, _Character, VitalityMax)
	THEN
		Set(_CalculatedHP, %LifeTransferenceHP)
		//Cast(_Text, _CalculatedHP)
		//Cast(_Disp, _Text)
		//StatusText(_Character, _Disp)
		Multiply(_CalculatedHP, 2)
		Add(_CalculatedHP, _SourceHP)
		Divide(_CalculatedHP, _SourceMaxHP)
		SetHealth(_Character, _CalculatedHP)
	ENDIF

EVENT WardingBondSetHP
VARS
	CHARACTER:_Character
	FLOAT:_HP
ON
	OnCharacterStatusApplied(_Character, "WARDING_BOND")
ACTIONS
	IF	"c1&c2"
		CharacterGetStatusSourceCharacter(_Character, "WARDING_BOND", _Source)
		CharacterGetStat(_HP, _Character, Vitality)
	THEN
		Set(%WardingBondHP, _HP)
		CharacterApplyStatus(_Source, "WARDING_BOND_CASTER", -1)
	ENDIF

EVENT WardingBondChangeinHP
VARS
	CHARACTER:_Character
	CHARACTER:_Source
	FLOAT:_HP
	FLOAT:_MaxHP
	FLOAT:_CalculatedHP
	INT:_IntofCalculatedHP
	FLOAT:_SourceHP
	FLOAT:_SourceMaxHP
	FLOAT:_CalculatedSourceHP
ON
	OnCharacterVitalityChanged(_Character, _HP)
ACTIONS
	IF "c1"
		CharacterHasStatus(_Character, "WARDING_BOND")
	THEN
		IF "c1"
			IsGreaterThen(_HP, %WardingBondHP)
		THEN
			Set(%WardingBondHP, _HP)
		ELIF "c1&c2"
			IsLessThen(_HP, %WardingBondHP)
			CharacterGetStatusSourceCharacter(_Character, "WARDING_BOND", _Source)
		THEN
			IF "c1&c2&c3"
				CharacterGetStat(_MaxHP, _Character, VitalityMax)
				CharacterGetStat(_SourceHP, _Source, Vitality)
				CharacterGetStat(_SourceMaxHP, _Source, VitalityMax)
			THEN
				Set(_CalculatedHP, %WardingBondHP)
				Subtract(_CalculatedHP, _HP)
				Multiply(_CalculatedHP, _MaxHP)
				Add(_CalculatedHP, 0.5)
				Set(_IntofCalculatedHP, INT: 0)
				Add(_IntofCalculatedHP, _CalculatedHP)
				Set(_CalculatedSourceHP, _SourceHP)
				Multiply(_CalculatedSourceHP, _SourceMaxHP)
				Subtract(_CalculatedSourceHP, _IntofCalculatedHP)
				Add(_CalculatedSourceHP, 0.5)
				Set(_IntofCalculatedHP, INT: 0)
				Add(_IntofCalculatedHP, _CalculatedSourceHP)
				Set(_CalculatedSourceHP, FLOAT: 0)
				Add(_CalculatedSourceHP, _IntofCalculatedHP)
				Divide(_CalculatedSourceHP, _SourceMaxHP)
				SetHealth(_Source, _CalculatedSourceHP)
				Set(%WardingBondHP, _HP)
			ENDIF
		ENDIF
	ENDIF
 
RETURN(_RemoveList,_Result,null)

EVENT ChaosBolt_Test
VARS
CHARACTER:_Character
LIST<STATUS>:_RemoveList
STATUS:_Result
ON 
    FetchCharacterApplyStatusData(_Character, SNEAKING)
ACTIONS
    Set(_Result,SNEAKING)

	//DisplayText(_Character,"Works")

    RETURN(_RemoveList,_Result,-1)

IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,CHAOS_BOLT_PROC,_Source)
THEN
	DisplayText(_Source,"Works")
	GetRandomBetween(_Roll,1,8)
	IF "c1"		
		IsEqual(_Roll,1)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_Acid, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Roll,2)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_Cold, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Roll,3)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_Fire, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Roll,4)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_Force, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Roll,5)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_Lightning, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Roll,6)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_Poison, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Roll,7)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_Psychic, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Roll,8)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_Thunder, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ENDIF
ENDIF

    RETURN(_RemoveList,_Result,1)

EVENT ChaosBolt_CasterSubsequentAttack
VARS
CHARACTER:_Character
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_OWNER)
ACTIONS
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,2)
	THEN
		CharacterApplyStatus(_Character,CHAOS_BOLT_ADDITIONAL,1)
	ENDIF

EVENT ChaosBolt_RandomProjectile_2
VARS
CHARACTER:_Character
CHARACTER:_Source
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_2)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,CHAOS_BOLT_2,_Source)
THEN
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,1)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_2_Acid, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,2)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_2_Cold, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,3)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_2_Fire, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,4)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_2_Force, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,5)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_2_Lightning, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,6)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_2_Poison, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,7)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_2_Psychic, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,8)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_2_Thunder, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ENDIF
ENDIF

EVENT ChaosBolt_CasterSubsequentAttack_2
VARS
CHARACTER:_Character
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_2_OWNER)
ACTIONS
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,2)
	THEN
		CharacterApplyStatus(_Character,CHAOS_BOLT_2_ADDITIONAL,1)
	ENDIF

EVENT ChaosBolt_RandomProjectile_3
VARS
CHARACTER:_Character
CHARACTER:_Source
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_3)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,CHAOS_BOLT_3,_Source)
THEN
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,1)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_3_Acid, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,2)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_3_Cold, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,3)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_3_Fire, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,4)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_3_Force, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,5)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_3_Lightning, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,6)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_3_Poison, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,7)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_3_Psychic, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,8)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_3_Thunder, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ENDIF
ENDIF

EVENT ChaosBolt_CasterSubsequentAttack_3
VARS
CHARACTER:_Character
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_3_OWNER)
ACTIONS
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,2)
	THEN
		CharacterApplyStatus(_Character,CHAOS_BOLT_3_ADDITIONAL,1)
	ENDIF

EVENT ChaosBolt_RandomProjectile_4
VARS
CHARACTER:_Character
CHARACTER:_Source
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_4)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,CHAOS_BOLT_4,_Source)
THEN
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,1)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_4_Acid, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,2)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_4_Cold, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,3)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_4_Fire, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,4)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_4_Force, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,5)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_4_Lightning, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,6)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_4_Poison, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,7)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_4_Psychic, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,8)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_4_Thunder, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ENDIF
ENDIF

EVENT ChaosBolt_CasterSubsequentAttack_4
VARS
CHARACTER:_Character
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_4_OWNER)
ACTIONS
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,2)
	THEN
		CharacterApplyStatus(_Character,CHAOS_BOLT_4_ADDITIONAL,1)
	ENDIF

EVENT ChaosBolt_RandomProjectile_5
VARS
CHARACTER:_Character
CHARACTER:_Source
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_5)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,CHAOS_BOLT_5,_Source)
THEN
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,1)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_5_Acid, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,2)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_5_Cold, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,3)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_5_Fire, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,4)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_5_Force, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,5)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_5_Lightning, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,6)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_5_Poison, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,7)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_5_Psychic, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,8)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_5_Thunder, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ENDIF
ENDIF

EVENT ChaosBolt_CasterSubsequentAttack_5
VARS
CHARACTER:_Character
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_5_OWNER)
ACTIONS
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,2)
	THEN
		CharacterApplyStatus(_Character,CHAOS_BOLT_5_ADDITIONAL,1)
	ENDIF
	
EVENT ChaosBolt_RandomProjectile_6
VARS
CHARACTER:_Character
CHARACTER:_Source
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_6)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,CHAOS_BOLT_6,_Source)
THEN
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,1)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_6_Acid, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,2)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_6_Cold, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,3)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_6_Fire, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,4)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_6_Force, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,5)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_6_Lightning, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,6)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_6_Poison, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,7)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_6_Psychic, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,8)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_6_Thunder, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ENDIF
ENDIF

EVENT ChaosBolt_CasterSubsequentAttack_6
VARS
CHARACTER:_Character
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_6_OWNER)
ACTIONS
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,2)
	THEN
		CharacterApplyStatus(_Character,CHAOS_BOLT_6_ADDITIONAL,1)
	ENDIF
	
EVENT ChaosBolt_RandomProjectile_7
VARS
CHARACTER:_Character
CHARACTER:_Source
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_7)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,CHAOS_BOLT_7,_Source)
THEN
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,1)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_7_Acid, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,2)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_7_Cold, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,3)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_7_Fire, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,4)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_7_Force, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,5)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_7_Lightning, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,6)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_7_Poison, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,7)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_7_Psychic, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,8)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_7_Thunder, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ENDIF
ENDIF

EVENT ChaosBolt_CasterSubsequentAttack_7
VARS
CHARACTER:_Character
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_7_OWNER)
ACTIONS
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,2)
	THEN
		CharacterApplyStatus(_Character,CHAOS_BOLT_7_ADDITIONAL,1)
	ENDIF
	
EVENT ChaosBolt_RandomProjectile_8
VARS
CHARACTER:_Character
CHARACTER:_Source
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_8)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,CHAOS_BOLT_8,_Source)
THEN
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,1)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_8_Acid, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,2)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_8_Cold, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,3)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_8_Fire, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,4)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_8_Force, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,5)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_8_Lightning, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,6)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_8_Poison, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,7)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_8_Psychic, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,8)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_8_Thunder, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ENDIF
ENDIF

EVENT ChaosBolt_CasterSubsequentAttack_8
VARS
CHARACTER:_Character
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_8_OWNER)
ACTIONS
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,2)
	THEN
		CharacterApplyStatus(_Character,CHAOS_BOLT_8_ADDITIONAL,1)
	ENDIF
	
EVENT ChaosBolt_RandomProjectile_9
VARS
CHARACTER:_Character
CHARACTER:_Source
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_9)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,CHAOS_BOLT_9,_Source)
THEN
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,1)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_9_Acid, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,2)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_9_Cold, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,3)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_9_Fire, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,4)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_9_Force, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,5)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_9_Lightning, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,6)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_9_Poison, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,7)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_9_Psychic, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ELIF "c1"		
		IsEqual(_Result,8)
	THEN
		ShootLocalProjectileAt(Projectile_ChaosBolt_9_Thunder, _Source, {0.0;1.0;0.0}, _Character, -1, _Source)
	ENDIF
ENDIF

EVENT ChaosBolt_CasterSubsequentAttack_9
VARS
CHARACTER:_Character
INT:_Result

ON
	OnCharacterStatusApplied(_Character,CHAOS_BOLT_9_OWNER)
ACTIONS
	GetRandomBetween(_Result,1,8)
	IF "c1"		
		IsEqual(_Result,2)
	THEN
		CharacterApplyStatus(_Character,CHAOS_BOLT_9_ADDITIONAL,1)
	ENDIF

EVENT EnemiesAbound
VARS
CHARACTER:_Character
INT:_Result

ON
	OnCharacterStatusApplied(_Character,ENEMIES_ABOUND)
ACTIONS
	GetRandomBetween(_Result,1,2)
	IF "c1"
		IsEqual(_Result,1)
	THEN
		CharacterApplyStatus(_Character,ENEMIES_ABOUND_ALLY,1)
	ENDIF

EVENT EnemiesAboundTurn
VARS
CHARACTER:_Character
INT:_Result

ON
	OnTurnEnded(_Character)
ACTIONS
IF	"c1"
	CharacterHasStatus(_Character,ENEMIES_ABOUND)
THEN
	GetRandomBetween(_Result,1,2)
	IF "c1"
		IsEqual(_Result,1)
	THEN
		CharacterApplyStatus(_Character,ENEMIES_ABOUND_ALLY,1)
	ENDIF
ENDIF

EVENT EnemiesAbound_EndOfCombat
VARS
CHARACTER:_Character

ON
	OnLeftCombat(_Character,_)
ACTIONS
IF "c1&c2"
	CharacterHasStatus(_Character,ENEMIES_ABOUND)
	CharacterGetStatusSourceCharacter(_Character,ENEMIES_ABOUND,_Source)
THEN
	CharacterApplyStatus(_Source,BREAKCONCENTRATION,0)
ENDIF

EVENT Confusion
VARS
CHARACTER:_Character
INT:_Result
ON
	OnCharacterStatusApplied(_Character,CONFUSION_RANDOM)
ACTIONS
	GetRandomBetween(_Result,1,10)
	IF "c1"		
		IsEqual(_Result,1)
	THEN
		CharacterApplyStatus(_Character,CONFUSION_MOVEMENT,1)
	ELIF "c1"
		IsEqual(_Result,2)
	THEN
		CharacterApplyStatus(_Character,CONFUSION_NOACTION,1)
	ELIF "c1"		
		IsEqual(_Result,3)
	THEN
		CharacterApplyStatus(_Character,CONFUSION_NOACTION,1)
	ELIF "c1"		
		IsEqual(_Result,4)
	THEN
		CharacterApplyStatus(_Character,CONFUSION_NOACTION,1)
	ELIF "c1"		
		IsEqual(_Result,5)
	THEN
		CharacterApplyStatus(_Character,CONFUSION_NOACTION,1)
	ELIF "c1"		
		IsEqual(_Result,6)
	THEN
		CharacterApplyStatus(_Character,CONFUSION_NOACTION,1)
	ELIF "c1"		
		IsEqual(_Result,7)
	THEN
		CharacterApplyStatus(_Character,CONFUSION_ATTACK,1)
	ELIF "c1"		
		IsEqual(_Result,8)
	THEN
		CharacterApplyStatus(_Character,CONFUSION_ATTACK,1)
	ELIF "c1"
		IsEqual(_Result,9)
	THEN
		CharacterApplyStatus(_Character,CONFUSION_NORMAL,1)
	ELIF "c1"
		IsEqual(_Result,10)
	THEN
		CharacterApplyStatus(_Character,CONFUSION_NORMAL,1)
	ENDIF

EVENT Daylight
VARS
ITEM:_Item
CHARACTER:_Character
FLOAT3:_Result
ON
	OnItemStatus(_Item,DAYLIGHT)
	OnCharacterStatusApplied(_Character,DAYLIGHT_TECHNICAL)
ACTIONS
IF    "c1|c2"
    FindSurface(_Result, _Item, FLOAT:0.0, FLOAT:18.0, SurfaceDarknessCloud)
    FindSurface(_Result, _Character, FLOAT:0.0, FLOAT:18.0, SurfaceDarknessCloud)
THEN
    CreateSurfaceAt(_Result, SurfaceNone, FLOAT:18.0, -1)
	RemoveSurfaceLayerAt(_Result, 0, FLOAT:18.0)
ENDIF

EVENT DarknessDancingLights
VARS
ITEM:_Item
CHARACTER:_Character
ON
	OnItemStatusAttempt(_Item,BLINDED_DARKNESS)
ACTIONS
IF	"c1"
	ItemHasStatus(_Item,DANCING_LIGHTS)
THEN
	ItemDestroy(_Item)
ENDIF

EVENT DarknessOnItemEquipped
VARS
	CHARACTER:_Character
	ITEM:_Item
ON
	OnItemEquipped(_Character, _Item)
ACTIONS
IF	"c1"
	ItemHasStatus(_Item,DARKNESS_EQUIPPED)
THEN
	CharacterApplyStatus(_Character,DARKNESS_EFFECT,-1)
ELIF	"c1&!c2"
	ItemHasStatus(_Item,DARKNESS)
	ItemHasStatus(_Item,DARKNESS_EQUIPPED)
THEN
	ItemApplyStatus(_Character,DARKNESS_EQUIPPED,-1)
	CharacterApplyStatus(_Character,DARKNESS_EFFECT,-1)
ENDIF

EVENT DarknessOnItemDropped
VARS
	CHARACTER:_Character
	ITEM:_Item
ON
	OnItemDropped(_Item, _)
ACTIONS
IF	"c1&c2"
	ItemHasStatus(_Item,DARKNESS_EQUIPPED)
	ItemGetStatusSourceCharacter(_Item,DARKNESS_EQUIPPED,_Character)
THEN
	CharacterRemoveStatus(_Character,DARKNESS_VISUAL)
	CharacterRemoveStatus(_Character,DARKNESS_EFFECT)
ENDIF

EVENT DarknessOnPickupItem
VARS
	CHARACTER:_Character
	ITEM:_Item
ON
	OnPickupItem(_Character, _Item)
ACTIONS
IF	"c1|c2"
	ItemHasStatus(_Item,DARKNESS_EQUIPPED)
	ItemHasStatus(_Item,DARKNESS)
THEN
	SetVar(_Character, "DarknessItemHolder", _Item)
ENDIF

EVENT DarknessOnItemStatusRemoved
VARS
	CHARACTER:_Character
	ITEM:_Item
ON
	OnItemStatusRemoved(_Item, DARKNESS)
	OnItemStatusRemoved(_Item, DARKNESS_EQUIPPED)
ACTIONS
IF	"c1"
	GetVar(_Item,_Character,"DarknessItemHolder")
THEN
	CharacterRemoveStatus(_Character,DARKNESS_VISUAL)
	CharacterRemoveStatus(_Character,DARKNESS_EFFECT)
ENDIF

EVENT Catapult
VARS
	CHARACTER:_Character
	CHARACTER:_Source
	ITEM:_Item
ON
	OnCharacterStatusApplied(_Character, CATAPULT_TARGET)
ACTIONS
IF	"c1&c2&c3"
	CharacterGetStatusSourceCharacter(_Character,CATAPULT_TARGET,_Source)
	CharacterHasStatus(_Source,CATAPULT_SOURCE)
	CharacterGetStatusSourceItem(_Source,CATAPULT_SOURCE,_Item)
THEN
	TeleportTo(_Item, _Character)
	CharacterRemoveStatus(_Source,CATAPULT_TECHNICAL)
	CharacterRemoveStatus(_Source,CATAPULT_TECHNICAL_2)
	CharacterRemoveStatus(_Source,CATAPULT_TECHNICAL_3)
	CharacterRemoveStatus(_Source,CATAPULT_TECHNICAL_4)
	CharacterRemoveStatus(_Source,CATAPULT_TECHNICAL_5)
	CharacterRemoveStatus(_Source,CATAPULT_TECHNICAL_6)
	CharacterRemoveStatus(_Source,CATAPULT_TECHNICAL_7)
	CharacterRemoveStatus(_Source,CATAPULT_TECHNICAL_8)
	CharacterRemoveStatus(_Source,CATAPULT_TECHNICAL_9)
	ItemRemoveStatus(_Item,CATAPULT)
ENDIF
	
EVENT Ceremony_BlessWater
VARS
	CHARACTER:_Character
	Item:_Item
	LIST<STATUS>:_RemoveList
	STATUS:_Result
ON
	FetchCharacterApplyStatusData(_Character, BLESS_WATER)
ACTIONS
//	DisplayText(_Character,"Works")
//	CharacterRemoveFromInventory(_Character, "CONS_DRINK_Water", INT:1)
//	CharacterAddToInventory(_Character, "OBJ_HolyWaterFlask_Ceremony", INT:1)

    RETURN(_RemoveList,_Result,1)

EVENT Disintegrate
VARS
	CHARACTER:_Character
	ITEM:_Item
ON
	OnCharacterStatusApplied(_Character, DISINTEGRATE)
	OnItemStatus(_Item, DISINTEGRATE)
ACTIONS
	CharacterDestroy(_Character)
	ItemDestroy(_Item)
	
EVENT PowerWordKill
VARS
	CHARACTER:_Character
ON
	OnCharacterStatusApplied(_Character, POWER_WORD_KILL)
ACTIONS
IF	"c1"
	CharacterHasStatus(_Character,DEATH_WARD)
THEN
	CharacterRemoveStatus(_Character,DEATH_WARD)
ELIF	"!c1"
	CharacterHasStatus(_Character,DEATH_WARD)
THEN
	CharacterDie(_Character)
ENDIF

EVENT GuardianOfFaith
VARS
	CHARACTER:_Character
ON
	OnCharacterStatusApplied(_Character, GUARDIAN_OF_FAITH_60)
	OnCharacterStatusApplied(_Character, GUARDIAN_OF_FAITH_70)
ACTIONS
	CharacterDie(_Character)
	
EVENT Contagion
VARS
CHARACTER:_Character
INT:_Result
ON
	OnCharacterStatusApplied(_Character,CONTAGION_FAIL_3)
ACTIONS
	GetRandomBetween(_Result,1,6)
	IF "c1"		
		IsEqual(_Result,1)
	THEN
		CharacterApplyStatus(_Character,BLINDING_SICKNESS,-1)
	ELIF "c1"
		IsEqual(_Result,2)
	THEN
		CharacterApplyStatus(_Character,FILTH_FEVER,-1)
	ELIF "c1"		
		IsEqual(_Result,3)
	THEN
		CharacterApplyStatus(_Character,FLESH_ROT,-1)
	ELIF "c1"		
		IsEqual(_Result,4)
	THEN
		CharacterApplyStatus(_Character,MINDFIRE,-1)
	ELIF "c1"		
		IsEqual(_Result,5)
	THEN
		CharacterApplyStatus(_Character,SEIZURE,-1)
	ELIF "c1"		
		IsEqual(_Result,6)
	THEN
		CharacterApplyStatus(_Character,SLIMY_DOOM,-1)
	ENDIF
	
EVENT FingerOfDeath
VARS
CHARACTER:_Character
ON
	OnCharacterStatusApplied(_Character,FINGER_OF_DEATH_DESTROY)
ACTIONS
	CharacterDestroy(_Character)
	
EVENT FullRecoverySpells
VARS
CHARACTER:_Character
ON
	OnCharacterStatusApplied(_Character,POWER_WORD_HEAL)
ACTIONS
	SetHealth(_Character, 1.0)
	
EVENT TimeStop
VARS
CHARACTER:_Character
INT:_Result
ON
	OnCharacterStatusApplied(_Character,TIME_STOP_TECHNICAL)
ACTIONS
	GetRandomBetween(_Result,1,4)
	IF "c1"
		IsEqual(_Result,2)
	THEN
		CharacterApplyStatus(_Character, TIME_STOP_AURA, 3)
	ELIF "c1"
		IsEqual(_Result,3)
	THEN
		CharacterApplyStatus(_Character, TIME_STOP_AURA, 4)
	ELIF "c1"
		IsEqual(_Result,4)
	THEN
		CharacterApplyStatus(_Character, TIME_STOP_AURA, 5)
	ELIF "c1"
		IsEqual(_Result,1)
	THEN
		CharacterApplyStatus(_Character, TIME_STOP_AURA, 2)
	ENDIF

EVENT TimeStop_Removal
VARS
CHARACTER:_Character
STATUS:_Status
ON
	OnCharacterStatusApplied(_Character,_Status)
ACTIONS
IF	"!c1&c2&!c3&c4"
	IsEqual(_Status,TIME_STOP)
	CharacterGetStatusSourceCharacter(_Character,_Status,_Source)
	IsEqual(_Character,_Source)
	CharacterHasStatus(_Character,TIME_STOP)
THEN
	CharacterRemoveStatus(_Character,TIME_STOP)
ENDIF

EVENT Teleport_Explosion
VARS
	CHARACTER:_Character
	FLOAT3:_OldPos
	FLOAT3:_NewPos
ON
	OnCharacterTeleported(_Character, _Character, _OldPos, _NewPos, "Shout_Teleport_Character")
	OnCharacterTeleported(_Character, _Character, _OldPos, _NewPos, "Shout_Teleport_Character_8")
	OnCharacterTeleported(_Character, _Character, _OldPos, _NewPos, "Shout_Teleport_Character_9")
	OnCharacterTeleported(_Character, _Character, _OldPos, _NewPos, "Shout_Teleport_Character_Psion")
	OnCharacterTeleported(_Character, _Character, _OldPos, _NewPos, "Shout_Teleport_Character_Planeswalker")
	OnCharacterTeleported(_Character, _Character, _OldPos, _NewPos, "Shout_Teleport_Character_7_Planeswalker")
	OnCharacterTeleported(_Character, _Character, _OldPos, _NewPos, "Shout_Teleport_Character_8_Planeswalker")
	OnCharacterTeleported(_Character, _Character, _OldPos, _NewPos, "Shout_Teleport_Character_9_Planeswalker")
ACTIONS
	ExplodeAt(_OldPos, Projectile_Teleport_Explosion, -1, _Character)
	SetVar(_Character,"TeleportExplosion",_NewPos)

EVENT Teleport_Aftermath
VARS
CHARACTER:_Character
CHARACTER:_Source
FLOAT3:_Pos

ON
	OnCharacterStatusApplied(_Character,TELEPORT_EXPLOSION)
ACTIONS
IF	"c1&c2"
	CharacterGetStatusSourceCharacter(_Character,TELEPORT_EXPLOSION,_Source)
	GetVar(_Pos,_Source,"TeleportExplosion")
THEN
	TeleportTo(_Character,_Pos)
ENDIF

EVENT Teleport_Selection
VARS
CHARACTER:_Character
FLOAT3:_Pos

ON
	OnCharacterStatusApplied(_Character,TELEPORT_SELECTION)
ACTIONS
IF	"c1"
	GetPosition(_Character,_Pos)
THEN
	SetVar(_Character,"TeleportDestination",_Pos)
ENDIF

EVENT Teleport_CharacterDestination
VARS
CHARACTER:_Character
CHARACTER:_Source
ITEM:_Item
FLOAT3:_Pos

ON
	OnCharacterStatusApplied(_Character,TELEPORT)
	OnItemStatus(_Item,TELEPORT)
ACTIONS
IF	"c1&c2"
	CharacterGetStatusSourceCharacter(_Character,TELEPORT,_Source)
	GetVar(_Pos,_Source,"TeleportDestination")
THEN
	TeleportTo(_Character,_Pos)
ELIF	"c1&c2"
	ItemGetStatusSourceCharacter(_Item,TELEPORT,_Source)
	GetVar(_Pos,_Source,"TeleportDestination")
THEN
	TeleportTo(_Item,_Pos)
ENDIF

EVENT SpiritualWeapon_Teleport
VARS
	CHARACTER:_Character
	CHARACTER:_Source
	FLOAT3:_Pos
ON
	OnCharacterStatusApplied(_Character, SPIRITUAL_WEAPON_TELEPORT_PROC)
ACTIONS
	IF	"c1"
		CharacterGetStatusSourceCharacter(_Character, SPIRITUAL_WEAPON_TELEPORT, _Source)
	THEN
		TeleportTo(_Source,_Character)
		CharacterApplyStatus(_Source,SPIRITUAL_WEAPON_MOVEMENT,1)
	ENDIF

EVENT Haste_Lethargic
VARS
	CHARACTER:_Character
ON
	OnCharacterStatusRemoved(_Character, HASTE)
ACTIONS
	CharacterApplyStatus(_Character,HASTE_LETHARGY,1)

EVENT Sanctuary
VARS
	CHARACTER:_Character
	CHARACTER:_Source
ON
	OnCharacterStatusApplied(_Character, SANCTUARY_TECHNICAL)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,SANCTUARY_TECHNICAL,_Source)
THEN
	CharacterApplyStatus(_Character,SANCTUARY_EXPLOSION,1,1,_Source)
ENDIF

EVENT AnimateDead
VARS
	CHARACTER:_Character
	CHARACTER:_Source
ON
	OnCharacterStatusApplied(_Character, ANIMATE_DEAD_TECHNICAL)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,ANIMATE_DEAD_TECHNICAL,_Source)
THEN
	SetVar(_Character,"AnimateDead",_Source)
ENDIF

EVENT AnimateDead_2
VARS
	CHARACTER:_Character
	CHARACTER:_Source
ON
	OnCharacterStatusApplied(_Character, ANIMATE_DEAD_TECHNICAL_2)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,ANIMATE_DEAD_TECHNICAL_2,_Source)
THEN
	SetVar(_Character,"AnimateDead_2",_Source)
ENDIF

EVENT AnimateDead_3
VARS
	CHARACTER:_Character
	CHARACTER:_Source
ON
	OnCharacterStatusApplied(_Character, ANIMATE_DEAD_TECHNICAL_3)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,ANIMATE_DEAD_TECHNICAL_3,_Source)
THEN
	SetVar(_Character,"AnimateDead_3",_Source)
ENDIF

EVENT AnimateDead_Removal
VARS
	CHARACTER:_Character
	CHARACTER:_Source
ON
	OnCharacterStatusRemoved(_Character, ANIMATE_DEAD_TECHNICAL)
ACTIONS
IF	"c1"
	GetVar(_Source,_Character,"AnimateDead")
THEN
	TeleportTo(_Source,_Character)
	CharacterApplyStatus(_Source,ANIMATE_DEAD_DEATHTYPE,-1)
ENDIF

EVENT AnimateDead_Removal_2
VARS
	CHARACTER:_Character
	CHARACTER:_Source
ON
	OnCharacterStatusRemoved(_Character, ANIMATE_DEAD_TECHNICAL_2)
ACTIONS
IF	"c1"
	GetVar(_Source,_Character,"AnimateDead_2")
THEN
	TeleportTo(_Source,_Character)
	CharacterApplyStatus(_Source,ANIMATE_DEAD_DEATHTYPE,-1)
ENDIF

EVENT AnimateDead_Removal_3
VARS
	CHARACTER:_Character
	CHARACTER:_Source
ON
	OnCharacterStatusRemoved(_Character, ANIMATE_DEAD_TECHNICAL_3)
ACTIONS
IF	"c1"
	GetVar(_Source,_Character,"AnimateDead_3")
THEN
	TeleportTo(_Source,_Character)
	CharacterApplyStatus(_Source,ANIMATE_DEAD_DEATHTYPE,-1)
ENDIF

EVENT NathairsMischief
VARS
	CHARACTER:_Character
	CHARACTER:_Source
	ITEM:_Item
	INT:_Result
ON
	OnCharacterStatusApplied(_Character, NATHAIRS_MISCHIEF_EFFECT)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,NATHAIRS_MISCHIEF_EFFECT,_Source)
THEN
	GetRandomBetween(_Result,1,4)
	IF "c1"		
		IsEqual(_Result,1)
	THEN
		CharacterApplyStatus(_Character,NATHAIRS_MISCHIEF_CHARMED_EFFECT,1,1,_Source)
	ELIF "c1"
		IsEqual(_Result,2)
	THEN
		CharacterApplyStatus(_Character,NATHAIRS_MISCHIEF_BLINDED_EFFECT,1,1,_Source)
	ELIF "c1"
		IsEqual(_Result,3)
	THEN
		CharacterApplyStatus(_Character,NATHAIRS_MISCHIEF_INCAPACITATED_EFFECT,1,1,_Source)
	ELIF "c1&c2"
		IsEqual(_Result,4)
		CharacterGetStatusSourceItem(_Character,NATHAIRS_MISCHIEF_TECHNICAL,_Item)
	THEN
		ItemApplyStatus(_Item,NATHAIRS_MISCHIEF_DIFFICULT_TERRAIN_EFFECT,1,1,_Source)
	ENDIF
ENDIF

EVENT TemporalShunt
VARS
	CHARACTER:_Character
	CHARACTER:_Source
ON
	OnCharacterStatusApplied(_Character, TEMPORAL_SHUNT_TECHNICAL)
ACTIONS
IF	"c1"
	CharacterGetStatusSourceCharacter(_Character,TEMPORAL_SHUNT_TECHNICAL,_Source)
THEN
	CharacterApplyStatus(_Character,TEMPORAL_SHUNT_EXPLOSION,1,1,_Source)
ENDIF